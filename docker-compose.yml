services:
  orchestrator:
    build:
      context: .
      dockerfile: ./orchestrator/Dockerfile
      args:
        PROJECT_NAME: orchestrator
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8000:8000"
    depends_on:
      - llm_interface
      - graph_service
      - rules_policy_engine
      - neural_net_service
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  llm_interface:
    build:
      context: .
      dockerfile: ./llm_interface/Dockerfile
      args:
        PROJECT_NAME: llm_interface
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8001:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  graph_service:
    build:
      context: .
      dockerfile: ./graph_service/Dockerfile
      args:
        PROJECT_NAME: graph_service
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8002:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  rules_policy_engine:
    build:
      context: .
      dockerfile: ./rules_policy_engine/Dockerfile
      args:
        PROJECT_NAME: rules_policy_engine
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8003:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  neural_net_service:
    build:
      context: .
      dockerfile: ./neural_net_service/Dockerfile
      args:
        PROJECT_NAME: neural_net_service
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8004:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  dashboard:
    build:
      context: .
      dockerfile: ./dashboard/Dockerfile
      args:
        PROJECT_NAME: dashboard
        PROJECT_VERSION: ${PROJECT_VERSION:-0.1.0}
        COMMON_VERSION: ${COMMON_VERSION:-0.1.0}
    ports:
      - "8501:8501" # Corrected internal port for Streamlit
    depends_on:
      - orchestrator
    environment:
      - MONGODB_URI=mongodb://root:root@mongodb:27017/?authSource=admin
      - MONGODB_DB_NAME=fraud_detection
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: mongosh --host mongodb --port 27017 -u root --authenticationDatabase admin --eval "db.runCommand('ping').ok"
      interval: 10s
      timeout: 5s
      retries: 5
